#/bin/bash
NONE='\033[00m'
RED='\033[01;31m'
GREEN='\033[01;32m'
YELLOW='\033[01;33m'
PURPLE='\033[01;35m'
CYAN='\033[01;36m'
WHITE='\033[01;37m'
BOLD='\033[1m'
UNDERLINE='\033[4m'
MAX=10

COINGITHUB=https://github.com/spartacrypt/Redstone
COINPORT=19156
COINRPCPORT=19157
COINDAEMON=redstoned
COINCLI=redstone-cli
COINTX=redstone-tx
COINCORE=/home/ubuntu/.stratisnode/redstone/RedstoneTest
COINCONFIG=redstone.conf
COINRUNCMD='dotnet run -testnet -mine -mineaddress="TNd62DUQEHztwgScvkPvbE2uWdkvCYcsw7"'
COINSTARTUP=/home/ubuntu/redstoned
COINSRCLOC=/home/ubuntu/Redstone
COINDLOC=/home/ubuntu/Redstone/src/Redstone/Programs/Redstone.RedstoneFullNodeD
COINSERVICELOC=/etc/systemd/system/
COINSERVICENAME=redstoned@root.service

checkForUbuntuVersion() {
   echo "[1/${MAX}] Checking Ubuntu version..."
    if [[ `cat /etc/issue.net`  == *16.04* ]]; then
        echo -e "${GREEN}* You are running `cat /etc/issue.net` . Setup will continue.${NONE}";
    else
        echo -e "${RED}* You are not running Ubuntu 16.04.X. You are running `cat /etc/issue.net` ${NONE}";
        echo && echo "Installation cancelled" && echo;
        exit;
    fi
}

updateAndUpgrade() {
    echo
    echo "[2/${MAX}] Runing update and upgrade. Please wait..."
    sudo DEBIAN_FRONTEND=noninteractive apt-get update -qq -y > /dev/null 2>&1
    sudo DEBIAN_FRONTEND=noninteractive apt-get upgrade -y -qq > /dev/null 2>&1
    echo -e "${GREEN}* Done${NONE}";
}

setupSwap() {
    echo -e "${BOLD}"
    read -e -p "Add swap space? (Recommended for VPS that have 1GB of RAM) [Y/n] :" add_swap
    if [[ ("$add_swap" == "y" || "$add_swap" == "Y" || "$add_swap" == "") ]]; then
        swap_size="4G"
    else
        echo && echo -e "${NONE}[3/${MAX}] Swap space not created."
        echo -e "${NONE}${GREEN}* Done${NONE}";
    fi

    if [[ ("$add_swap" == "y" || "$add_swap" == "Y" || "$add_swap" == "") ]]; then
        echo && echo -e "${NONE}[3/${MAX}] Adding swap space...${YELLOW}"
        sudo fallocate -l $swap_size /swapfile
        sleep 2
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        echo -e "/swapfile none swap sw 0 0" | sudo tee -a /etc/fstab > /dev/null 2>&1
        sudo sysctl vm.swappiness=10
        sudo sysctl vm.vfs_cache_pressure=50
        echo -e "vm.swappiness=10" | sudo tee -a /etc/sysctl.conf > /dev/null 2>&1
        echo -e "vm.vfs_cache_pressure=50" | sudo tee -a /etc/sysctl.conf > /dev/null 2>&1
        echo -e "${NONE}${GREEN}* Done${NONE}";
    fi
}

installFail2Ban() {
    echo
    echo -e "[4/${MAX}] Installing fail2ban. Please wait..."
    sudo apt-get -y install fail2ban > /dev/null 2>&1
    sudo systemctl enable fail2ban > /dev/null 2>&1
    sudo systemctl start fail2ban > /dev/null 2>&1
    echo -e "${NONE}${GREEN}* Done${NONE}";
}

installFirewall() {
    echo
    echo -e "[5/${MAX}] Installing UFW. Please wait..."
    sudo apt-get -y install ufw > /dev/null 2>&1
    sudo ufw allow OpenSSH > /dev/null 2>&1
    sudo ufw allow $COINPORT/tcp > /dev/null 2>&1
    sudo ufw allow $COINRPCPORT/tcp > /dev/null 2>&1
    echo "y" | sudo ufw enable > /dev/null 2>&1
    echo -e "${NONE}${GREEN}* Done${NONE}";
}

installDependencies() {
    echo
    echo -e "[6/${MAX}] Installing dependecies. Please wait..."
    sudo apt-get install git nano wget curl software-properties-common -qq -y #> /dev/null 2>&1
    sudo curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg #> /dev/null 2>&1
    sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg #> /dev/null 2>&1
    sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > /etc/apt/sources.list.d/dotnetdev.list' #> /dev/null 2>&1
    sudo apt-get install apt-transport-https -qq -y #> /dev/null 2>&1
    sudo apt-get update -qq -y #> /dev/null 2>&1
    sudo apt-get install dotnet-sdk-2.1.103 -qq -y #> /dev/null 2>&1
    echo -e "${NONE}${GREEN}* Done${NONE}";
}

compileWallet() {
    echo
    echo -e "[7/${MAX}] Compiling wallet. Please wait, this might take a while to complete..."
    cd
    git clone $COINGITHUB > /dev/null 2>&1

    echo -e "${NONE}${GREEN}* Done${NONE}";
}

installWallet() {
    echo
    echo -e "[8/${MAX}] Installing wallet. Please wait..."
    echo -e "#!/bin/bash\nsudo apt update -y && \nsudo apt upgrade -y && \ncd $COINSRCLOC && \ngit pull &&\nexport DOTNET_CLI_TELEMETRY_OPTOUT=1\ncd $COINDLOC\n$COINRUNCMD" > $COINSTARTUP
    echo -e "[Unit]\nDescription=$COINDAEMON\nAfter=network.target\n\n[Service]\nType=simple\nUser=%i\nExecStart=$COINSTARTUP\n\n[Install]\nWantedBy=multi-user.target" >$COINSERVICENAME
    sudo mv $COINSERVICENAME $COINSERVICELOC
    sudo chmod 777 ~/$COINDAEMON
    sudo systemctl --system daemon-reload > /dev/null 2>&1
    sudo systemctl enable $COINDAEMON@root > /dev/null 2>&1
    echo -e "${NONE}${GREEN}* Done${NONE}";
}

configureWallet() {
    echo
    echo -e "[9/${MAX}] Configuring wallet. Please wait..."
    mnip=$(curl --silent ipinfo.io/ip)
    rpcuser=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1`
    rpcpass=`cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1`
    sudo mkdir -p $COINCORE
    echo -e "rpcuser=${rpcuser}\nrpcpassword=${rpcpass}\nbind=${mnip}:${COINPORT}\nlisten=1\nserver=1\ndaemon=1\nmaxconnections=64\naddnode=35.176.127.127 \naddnode=18.130.33.99" > $COINCONFIG
    sudo mv $COINCONFIG $COINCORE
    echo -e "${NONE}${GREEN}* Done${NONE}";
}

startWallet() {
    echo
    echo -e "[10/${MAX}] Starting wallet daemon..."
    sudo service $COINDAEMON@root start > /dev/null 2>&1
    sleep 2
    echo -e "${GREEN}* Done${NONE}";
}

clear
cd

echo && echo

echo -e ${YELLOW}
echo -e "${YELLOW}**********************************************************************${NONE}"
echo -e "${YELLOW}*                                                                    *${NONE}"
echo -e "${YELLOW}*    ${NONE}${BOLD}This script will install and configure your Redstone node.   ${NONE}${YELLOW}   *${NONE}"
echo -e "${YELLOW}*                                                                    *${NONE}"
echo -e "${YELLOW}**********************************************************************${NONE}"
echo && echo

echo -e "${BOLD}"
read -p "This script will setup your Redstone node. Do you wish to continue? (y/n)?" response
echo -e "${NONE}"

if [[ "$response" =~ ^([yY][eE][sS]|[yY])+$ ]]; then
    checkForUbuntuVersion
    updateAndUpgrade
    setupSwap
    installFail2Ban
    installFirewall
    installDependencies
    compileWallet
    installWallet
    configureWallet
    startWallet

echo -e "${YELLOW}* Installation complete *${NONE}"
else
    echo && echo "Installation cancelled" && echo
fi
